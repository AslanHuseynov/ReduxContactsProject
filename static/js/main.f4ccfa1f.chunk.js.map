{"version":3,"sources":["Header.js","Components/Search/Search.js","Data/data.js","Components/ContactList/ContactListItem.js","Redux/actions/index.js","Components/ContactList/ContactList.js","Components/ContactForms/ContactForm.js","Components/ContactForms/AddContact.js","Components/ContactForms/EditContact.js","Main.js","App.js","Redux/reducers/contactReducer.js","Redux/store/index.js","index.js"],"names":["Header","props","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Search","style","marginTop","onClick","showAddForm","placeholder","value","searchValue","onChange","handleSearch","getContacts","JSON","parse","localStorage","getItem","connect","removeContact","newContacts","db","filter","x","contacts","setItem","stringify","payload","icon","faUser","contact","name","faPhone","phone","faEnvelope","email","faTrashAlt","handleEditform","faPencilAlt","ContactList","this","map","Component","state","undefined","ContactForm","htmlFor","aria-describedby","hanldeChange","class","for","AddContact","Date","now","errors","event","target","setState","save","handleValidation","addContact","close","alert","isFormValid","match","faCheck","faWindowClose","color","fontWeight","display","contactArray","EditContact","editContact","currentContact","currentId","contact_target","Main","isEnable","addForm","editForm","handleCloseAddForm","handleCloseEditForm","handleShowAddForm","initializeAction","prevProps","prevState","snapshot","searchAction","handleAddContact","React","toUpperCase","includes","App","initialState","contactReducer","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4ccfa1f.chunk.js","sourcesContent":["import React from 'react'\n\nexport default  function Header (props){\n   return (\n        <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-primary\">\n        <a className=\"navbar-brand\" href=\"#\">Navbar</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n            <div className=\"navbar-nav\">\n            </div>\n        </div>\n        </nav>\n   )\n}\n","import React from 'react'\nimport './Search.css'\n\nfunction Search(props) {\n  return (\n    <form className='filter-form container' style={{ marginTop: '70px' }}>\n      <div className='input-group input-group'>\n        <div className='input-group-prepend'>\n          <button\n            className='btn btn-outline-secondary'\n            type='button'\n            id='add-button'\n            onClick={props.showAddForm}\n          >\n            დამატება\n          </button>\n        </div>\n        <input\n          placeholder='ძებნა'\n          type='text'\n          className='form-control'\n          id='search'\n          value={props.searchValue}\n          onChange={props.handleSearch}\n        />\n      </div>\n    </form>\n  )\n}\n\nexport default Search\n","export function getContacts(){\n    const contacts = JSON.parse(localStorage.getItem('contacts')) || []\n    return contacts\n }\n\n export function addContact(contact){\n     const contacts = getContacts()\n     const contactArray = [...contacts, contact]\n     localStorage.setItem('contacts', JSON.stringify(contactArray))\n }\n\n export function removeContact(contacts){\n   localStorage.setItem('contacts', JSON.stringify(contacts));\n }\n\n export function editContact(contact)\n {\n   const contacts = getContacts()\n   const contact_target = contacts.filter((x) => x.id === contact.id)[0]\n   contact_target.name = contact.name\n   contact_target.phone = contact.phone\n   contact_target.email = contact.email\n   localStorage.setItem('contacts', JSON.stringify(contacts));\n }","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelope, faPencilAlt, faPhone, faTrashAlt, faUser } from '@fortawesome/free-solid-svg-icons'\nimport React from 'react'\nimport './ContactListItem.css'\nimport {connect} from 'react-redux'\nimport { removeContact } from '../../Redux/actions'\n\nfunction ContactListItem(props){\n        return <div key={props.contact.id} className='d-inline-block card mt-3 mr-3'>\n        <div className='card-body'>\n        <p><FontAwesomeIcon icon={faUser} /> {props.contact.name}</p>\n        <p><FontAwesomeIcon icon={faPhone} /> {props.contact.phone}</p>\n        <p><FontAwesomeIcon icon={faEnvelope} /> {props.contact.email}</p>\n        \n        <button className='btn btn-danger float-right' \n          onClick={() =>props.removeContact(props.contact.id)}\n        >\n        <FontAwesomeIcon icon={faTrashAlt} />\n        </button> \n        <button className='btn btn-warning float-right mr-2'\n         onClick={()=>props.handleEditform(props.contact.id)}\n        >\n        <FontAwesomeIcon icon={faPencilAlt} />\n        </button>\n        </div>\n    </div>\n    \n}\n\nexport default connect(null, {removeContact})(ContactListItem)\n","import * as db from '../../Data/data'\n\nexport const initializeAction = () =>\n{\n    const contacts = db.getContacts()\n    return{\n    type: 'INITIALIZE',\n    payload: contacts\n    }\n}\n\nexport const removeContact = (id) =>\n{\n    const contacts = db.getContacts()\n    const newContacts = contacts.filter((x) => x.id !== id)\n    db.removeContact(newContacts)\n    return    {\n        type: 'REMOVE_CONTACT',\n        payload: newContacts,    \n    }\n}\n\nexport const addContact = (contact) =>\n{\n    const contacts = db.getContacts()\n    const newContacts = [...contacts, contact]\n    db.addContact(contact)\n    return {\n        type: 'ADD_CONTACT',\n        payload: newContacts\n    }\n}\n\nexport const editContact = (contact) =>\n{\n    db.editContact(contact)\n    const newContacts  = db.getContacts()\n    return {\n        type: 'EDIT_CONTACT',\n        payload: newContacts\n    }\n\n}\n\nexport const searchAction = (searchValue) =>{\n    const search = db.getContacts();\n    const filteredContacts = search.filter((contact) =>\n    contact.name.toUpperCase().includes(searchValue.toUpperCase()) ||\n    contact.phone.toUpperCase().includes(searchValue.toUpperCase()) ||\n    contact.email.toUpperCase().includes(searchValue.toUpperCase())\n    )\n    return{\n        type: 'SEARCH',\n        payload: filteredContacts\n    }\n}\n","import React, {Component} from 'react'\nimport ContactListItem from './ContactListItem.js'\nimport { connect } from 'react-redux'\nimport './ContactList.css'\n\nclass ContactList extends Component{\n   render(){\n    return <div className='container mt-4'>\n        <h4>კონტაქტები</h4>\n        <hr />\n        <br />\n            <div>\n                {\n                   this.props.contacts && \n                   this.props.contacts.map(contact => \n                    <ContactListItem\n                    contact = { contact }\n                    handleEditform = {this.props.handleEditform}/> )\n                }\n            </div>\n        </div>\n   }\n\n}\n\nconst mapStateToProps = state => ( {contacts: state.contacts} )\nexport default connect(mapStateToProps, undefined)(ContactList)","import React from 'react'\n\nexport default function ContactForm(props){\n    return(\n    <>\n    <div className='form-group'>\n        <label htmlFor='exampleInputEmail1'>დასახელება</label>\n        <input\n            type='text'\n            className='form-control'\n            id='exampleInputEmail1'\n            aria-describedby='emailHelp'\n            value={props.name}\n            name='name'\n            onChange={props.hanldeChange}\n        />\n    </div>\n    <div class='form-group'>\n    <label for='exampleInputPassword1'>ტელეფონი</label>\n    <input\n        type='text'\n        className='form-control'\n        id='exampleInputPassword1'\n        value={props.phone}\n        name='phone'\n        onChange={props.hanldeChange}\n    />\n    </div>\n    <div class='form-group'>\n    <label for='exampleInputPassword1'>ელ.ფოსტა</label>\n    <input\n        type='text'\n        className='form-control'\n        id='exampleInputPassword1'\n        value={props.email}\n        name='email'\n        onChange={props.hanldeChange}\n    />\n    </div>\n    </>\n    )\n}\n","import React, { Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck, faWindowClose } from '@fortawesome/free-solid-svg-icons'\nimport {connect} from 'react-redux'\nimport {addContact} from '../../Redux/actions'\nimport ContactForm from './ContactForm'\nimport propTypes from 'prop-types'\n\n\n\nclass AddContact extends Component {\n\n  state = {\n    id: Date.now(),\n    name: '',\n    phone: '',\n    email: '',\n    errors: {\n      name:'',\n      phone: '',\n      email: ''\n    }\n  }\n\n  handleValidation(){\n    let isFormValid = true;\n    let errors = {};\n\n    //name\n    if(this.state.name === ''){\n      isFormValid = false;\n      errors.name = \"Name can't be empty\";\n    }\n\n    if(typeof this.state.name !== \"undefined\")\n    {\n      if(!this.state.name.match(/^[a-zA-Z]+$/)){\n        isFormValid = false;\n        errors.name = \"Name is not valid\";\n      }\n    }\n\n    //phone\n    if(this.state.phone === ''){\n      isFormValid = false;\n      errors.phone = \"Phone can't be empty\";\n    }\n\n    if(typeof this.state.phone !==  \"undefined\"){\n      if(!this.state.phone.match(/^\\+[0-9]{1,3}[0-9]{4,9}(?:x.+)?$/)){\n        isFormValid = false;\n        errors.phone = \"Phone is not valid\";\n      }\n    }\n\n    //email\n    if(this.state.email === ''){\n      isFormValid = false;\n      errors.email = \"E-Mail can't be empty\";\n    }\n\n    if(typeof this.state.email !== \"undefined\")\n    {\n      const rex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      if(!this.state.email.match(rex)){\n        isFormValid = false;\n        errors.email = \"E-Mail is not valid\"\n      }\n    }\n\n    this.setState({errors: errors});\n    return isFormValid;\n  }\n\n\n  hanldeChange = (event) => {\n    const { name, value } = event.target\n    this.setState(\n      {\n        [name]: value,\n      },\n      () => {}\n    )\n  }\n\n  save = () => {\n    if(this.handleValidation()){\n      this.props.addContact(this.state)\n      this.props.close()\n    }\n    else\n    {\n      alert(\"Form has errors.\")\n    }\n  }\n\n  render() {\n    return (\n    <div className='container filter-form'>\n      <h4>კონტაქტის დამატება</h4>\n      <hr />\n      <br />\n          <form>\n          <ContactForm \n          hanldeChange = {this.hanldeChange}\n          />\n          <button\n            type='button'\n            id = 'submit'\n            value = 'Submit'\n            className='btn btn-success mr-1'\n            onClick={this.save}\n          >\n            <FontAwesomeIcon icon={faCheck} />\n          </button>\n          <button\n            type='button'\n            className='btn btn-secondary'\n            onClick={() => this.props.close()}\n          >\n            <FontAwesomeIcon icon = {faWindowClose} />\n          </button>\n          <div className = \"mt-3\">\n            <span style={{color : \"red\", fontWeight: \"bold\"}}>{this.state.errors.name}</span>\n            <span style={{color : \"red\", fontWeight: \"bold\",display: \"block\"}}>{this.state.errors.phone}</span>\n            <span style={{color : \"red\",fontWeight: \"bold\"}}>{this.state.errors.email}</span>\n          </div>\n          </form>\n      </div>\n    )\n  }\n}\n\nAddContact.propTypes = \n{\n  close: propTypes.func.isRequired,\n  hanldeChange: propTypes.func.isRequired,\n}\n\n\nexport default connect(null, {addContact})(AddContact)\n","import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck, faWindowClose } from '@fortawesome/free-solid-svg-icons'\nimport propTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { editContact} from '../../Redux/actions'\nimport ContactForm from './ContactForm'\n\n\nclass EditContact extends Component {\n\n  state={\n    id:null,\n    name: '',\n    phone: '',\n    email: '',\n    errors : {\n      name:'',\n      phone: '',\n      email: ''\n    }\n  }\n\n  componentDidMount(){\n    const currentContact = this.props.contacts.filter((x) => x.id === this.props.currentId)\n    this.setState(\n        {\n            id: this.props.currentId,\n            name: currentContact[0].name,\n            phone: currentContact[0].phone,\n            email: currentContact[0].email,\n        }\n    )\n  }\n\n  handleValidation(){\n    let isFormValid = true;\n    let errors = {};\n\n    //name\n    if(this.state.name === ''){\n      isFormValid = false;\n      errors.name = \"Name can't be empty\";\n    }\n\n    if(typeof this.state.name !== \"undefined\")\n    {\n      if(!this.state.name.match(/^[a-zA-Z]+$/)){\n        isFormValid = false;\n        errors.name = \"Name is not valid\";\n      }\n    }\n\n    //phone\n    if(this.state.phone === ''){\n      isFormValid = false;\n      errors.phone = \"Phone can't be empty\";\n    }\n\n    if(typeof this.state.phone !==  \"undefined\"){\n      if(!this.state.phone.match(/^\\+[0-9]{1,3}[0-9]{4,9}(?:x.+)?$/)){\n        isFormValid = false;\n        errors.phone = \"Phone is not valid\";\n      }\n    }\n\n    //email\n    if(this.state.email === ''){\n      isFormValid = false;\n      errors.email = \"E-Mail can't be empty\";\n    }\n\n    if(typeof this.state.email !== \"undefined\")\n    {\n      const rex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      if(!this.state.email.match(rex)){\n        isFormValid = false;\n        errors.email = \"E-Mail is not valid\"\n      }\n    }\n\n    this.setState({errors: errors});\n    return isFormValid;\n  }\n\n  hanldeChange = (event) => {\n    const { name, value } = event.target\n    this.setState(\n      {\n        [name]: value,\n      },\n      () => {}\n    )\n  }\n\n  save = () => {\n    if(this.handleValidation()){\n      this.props.editContact(this.state)\n      this.props.close()  \n    }\n    else{\n      alert(\"Form has errors.\")\n    }\n  }\n\n  render() {\n    return (\n      <div className='container filter-form'>\n        <h4>კონტაქტის შეცვლა</h4>\n        <hr />\n        <br />\n          <form>\n          <ContactForm\n          hanldeChange = {this.hanldeChange}\n          name = {this.state.name}\n          phone = {this.state.phone}\n          email = {this.state.email}\n          />\n          <button\n            type='button'\n            id = 'submit'\n            value = 'Submit'\n            className='btn btn-warning mr-1'\n            onClick={this.save}\n          >\n            <FontAwesomeIcon icon={faCheck} />\n          </button>\n          <button\n            type='button'\n            className='btn btn-secondary'\n            onClick={() => this.props.close()}\n          >\n            <FontAwesomeIcon icon = {faWindowClose} />\n          </button>\n          <div className = \"mt-3\">\n            <span style={{color : \"red\", fontWeight: \"bold\"}}>{this.state.errors.name}</span>\n            <span style={{color : \"red\", fontWeight: \"bold\",display: \"block\"}}>{this.state.errors.phone}</span>\n            <span style={{color : \"red\",fontWeight: \"bold\"}}>{this.state.errors.email}</span>\n          </div>\n          </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({contacts: state.contacts})\nexport default connect(mapStateToProps, {editContact})(EditContact)\n\nEditContact.propTypes = \n{\n  close: propTypes.func.isRequired,\n  hanldeChange: propTypes.func.isRequired,\n}\n\n","import React from 'react'\nimport Search from './Components/Search/Search.js'\nimport ContactList from './Components/ContactList/ContactList.js'\nimport {initializeAction, searchAction} from './Redux/actions'\nimport {connect} from 'react-redux'\nimport AddContact from './Components/ContactForms/AddContact.js'\nimport EditContact from './Components/ContactForms/EditContact.js'\n\nclass Main extends React.Component\n{\n\n    state = {\n        isEnable: true,\n        addForm: false,\n        editForm: false,\n        currentId: null,\n        searchValue: '',\n      }\n    \n      componentDidMount() { \n        this.props.initializeAction()\n      }\n    \n      componentDidUpdate(prevProps, prevState, snapshot)\n      {\n        if(prevState.searchValue !== this.state.searchValue)\n        { \n          this.props.searchAction(this.state.searchValue)\n        }\n      }\n    \n      \n      handleSearch = (event) => {\n        this.setState({\n          searchValue: event.target.value,\n        })\n      }\n\n      handleCloseAddForm = () => {\n        this.setState({ addForm: false })\n      }\n      \n      handleCloseEditForm = () => {\n        this.setState({ editForm: false})\n      }\n     \n      handleShowAddForm = () => {\n        this.setState({ addForm: true })\n      }\n     \n      handleEditform = (id) => \n      {\n        this.setState({editForm: true, currentId: id })\n      }\n\n    \n      render() {\n        let element\n        if(this.state.addForm)\n        {\n        element =( \n            <>\n            {}\n             <AddContact \n              close={this.handleCloseAddForm} \n              handleAddContact = {this.handleAddContact}/>\n            </>)\n\n        }\n       else if(this.state.editForm)\n        {\n          element = (\n          <>\n            <EditContact\n             close={this.handleCloseEditForm}\n             currentId = {this.state.currentId}/>\n          </>)\n\n        }else{\n         element =( \n            <>\n            <Search searchValue={this.state.searchValue} handleSearch={this.handleSearch}  showAddForm={this.handleShowAddForm}/>\n            <ContactList\n                contacts={this.state.contacts}\n                handleEditform={this.handleEditform} />\n            </>)\n \n        }\n        return ( element )\n      }\n}\n\nconst mapStateToProps = state => ({ contacts: state.contacts})\nexport default connect(mapStateToProps, {initializeAction, searchAction})(Main)","import Header from './Header'\nimport Main from './Main'\n\nfunction App(props) {\n  return (\n    <>\n    <Header/>\n    <Main/>\n    </>\n  );\n}\n\nexport default (App)","const initialState = \n{\n    contacts: [{id: 0, name: \"Wilbur\",phone:\"+995599983797\",email:\"Wilbur@gmail.com\"}],\n}\n\n\nconst contactReducer = (state = initialState, action) =>\n{\n    const {type, payload} = action\n    switch(type)\n    {\n        case 'INITIALIZE':\n            return {contacts: payload}\n        case 'ADD_CONTACT':\n            return {contacts: payload}\n        case 'EDIT_CONTACT':\n            return {contacts: payload}\n        case 'REMOVE_CONTACT':\n            return {contacts: payload}\n        case 'SEARCH':\n            return {contacts: payload}\n        default:\n            return state\n    }\n}\n\nexport default contactReducer","import {createStore} from 'redux'\nimport contactReducer from '../reducers/contactReducer'\n\nconst store = createStore(contactReducer)\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport {Provider} from 'react-redux'\nimport store from './Redux/store'\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}